Java基本语法及关键字：

数据类型：
    Java有8种基本类型，其中有4种整型、2种浮点型、1种char型，1种boolean型。
    int：4 字节（1字节为8位），范围 -2147483648（-2^31）— 2147483647（2^31-1）（21亿，切记：一些编程题可能需要用long）
    short：2 字节，范围 -32768 — 32767
    long：8 字节，范围 -2^63 — 2^63-1，一些编程题需要用long型才能AC
    byte：1 字节，范围 -128 — 127（-2^7 — 2^7-1）
    float：4 字节
    double：8 字节
    char：字符型，用于存储单个字符（现在有些需要两个），占16位，即2个字节
    boolean：1个字节，true 或 false
    为什么8位有符号数的取值范围为 -128 — 127？
    答：8位二进制,最高位是符号位,所以0开头的是正数,1开头是负数。负数部分为：1000 0000，为-2^7 — -1，
        正数部分为：0111 1111，为0 — 2^7-1


static关键字：
    static表示静态，它可以修饰变量、方法和代码块，被static修饰的成员称为静态成员或类成员，它属于整个类所有，而不是某个
对象所有，即被类的所有对象所共享。一般来说，类中标注了static的变量或方法能在类外直接引用，即通过类名.静态变量 或
类名.静态方法 来引用，而没有标注static的变量或方法则必须声明这个类的实体，由实体来引用。
    static变量：被static修饰的变量叫静态变量或类变量；没有被static修饰的变量叫实例变量。静态变量是随着类加载时被完成
初始化的，它在内存中仅有一个，且JVM也只会为它分配一次内存，同时类所有的实例都共享静态变量，可以直接通过类名来访问它。
但是实例变量则不同，它是伴随着实例的，每创建一个实例就会产生一个实例变量，它与该实例同生共死。
    在Java中static不允许用来修饰局部变量，C/C++中可以。
    静态方法：静态方法的好处就是不用生成类的实例就能直接调用，只要通过类名就可以访问，不需要耗费资源反复创建对象，因为
在程序第一次加载的时候就已经在内存中了，直到程序结束该内存才会释放。被static修饰的方法内部不能访问非static的变量和方法，
因为非静态成员变量/方法都是必须依赖具体的对象才能够被调用，而static方法属于整个类所有，可以直接通过类名.静态方法调用，
不一定有对象实例（意思就是我可以不用new一个对象实例而直接通过类名.静态方法调用这个方法，如果static方法里有非静态成员
变量/方法，因为这时候没有对象实例，所以会报错）。非static方法内部可以访问static成员的方法和变量。


java中==和equals的区别：
1、== 如果作用于基本数据类型的变量，直接比较值是否相等；如果作用于引用类型的变量，比较的是所指向的对象的地址(是否是同一个
对象)。
2、equals方法不能作用于基本数据类型的变量；如果没有对equals方法进行重写，则比较的是引用类型的变量所指向的对象的地址；
String、Date等类对equals方法进行了重写，比较的是所指向的对象的内容是否相等。