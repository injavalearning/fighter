端系统：
    也被称为主机（host），主机 = 端系统，可以进一步划分为两类：客户机（client）和服务器（server）。客户机程序（client
program）是运行在端系统上，发出请求并从运行在另一个端系统上的服务器程序接收服务的程序。客户机/服务器应用程序是分布式
应用程序，通过因特网互相发送报文进行交互，在这个层次上，路由器、链路和其它因特网服务的架构组成“黑盒子”，在因特网应用
程序的分布式通信部件之间传输报文。
面向连接服务：
    面向连接的服务就是通信双方在通信时，要事先建立一条通信线路（握手过程），其过程有建立连接、使用连接和释放连接三个
过程。TCP协议就是一种面向连接服务的协议，电话系统是一个面向连接的模式。
无连接服务：
    网络系统允许一台计算机在任何时刻发送数据给任何一台其它的计算机的特性。UDP协议就是一种无连接服务的协议，书信往来是
一个无连接的模式。


网络上的进程通信：
    进程通过它的套接字在网络上发送和接收报文，进程的套接字可以理解为该进程的门户，套接字也叫做应用程序和网络之间的
应用程序接口。Socket（套接字）= IP address + TCP/UDP + port


TCP和UDP：因特网上的应用使用了两个传输层协议
1、TCP：传输控制协议（Transmission Control Protocol），提供面向连接的服务和可靠的数据传输服务，面向连接的服务是指通过
三次握手建立连接，连接是全双工的，连接双方可以同时进行报文收发，通讯完成时要拆除连接；可靠的数据传输服务是指进行通信的
进程依靠TCP协议，以无差错、按适当顺序交付发送的数据。由于TCP是面向连接的所以只能用于端到端的通讯，它还具有拥塞控制机制，
当发送方和接收方之间的网络出现拥塞时，TCP的拥塞控制机制会抑制发送进程。
2、UDP：用户数据报协议（User Datagram Protocol），是一个轻量级的传输协议，提供不可靠的数据传输服务，UDP是无连接的，在
进程通信前没有握手过程，当进程通过UDP协议的套接字发送报文时，UDP不保证报文能被接收进程接收到，而且接收进程接收到的报文
也可能是乱序到达的。UDP没有拥塞控制机制，发送进程可以用任何速率向UDP协议的套接字交付数据。
3、TCP是可靠的但传输速度慢，UDP是不可靠的但传输速度快。因此TCP主要用于FTP（文件传输协议）、Telnet（远程登录协议）、
SMTP（简单邮件传输协议）、POP3（和SMTP相对，用于接收邮件）、HTTP协议等。UDP主要用于TFTP（简单文件传输协议）、
SNMP（简单网络管理协议）、DNS（域名解析协议）、NFS、BOOTP等。

应用层：
Web：
    即万维网 world wide web 的缩写，是基于http协议进行交互的应用网络。通常所指 Web，就是用网页浏览器浏览网页这种网络
资源。Web Page 指网站内的网页，是由对象组成的，对象简单来说就是一个具有单个URL地址的文件，每个URL地址由两部分组成：存放
对象的服务器主机名和对象的路径名，例如：www.zhihu.com/question/19860216，www.zhihu.com就是主机名，/question/19860216是
路径名。浏览器是Web应用的用户代理，用于显示所请求的Web页。Web服务器用于贮存Web对象。
http协议：
    超文本传输协议HTTP（HyperText Transfer Protocol）是Web的核心，Http协议定义了Web客户机（如浏览器）是如何向Web站点
请求Web页以及服务器是如何将Web页传送给客户机的。Http协议是建立在TCP协议基础之上的，当浏览器需要从服务器获取网页数据的
时候，会发出一次Http请求，Http会通过TCP建立起一个到服务器的连接通道，当本次请求需要的数据完毕后，Http会立即将TCP连接
断开，这个过程是很短的，所以Http连接是一种短连接，是一种无状态的连接。所谓的无状态，是指浏览器每次向服务器发起请求的
时候，不是通过一个连接，而是每次都建立一个新的连接。如果是一个连接的话，服务器进程中就能保持住这个连接并且在内存中记住
一些信息状态。而每次请求结束后，连接就关闭，相关的内容就释放了，所以记不住任何状态，成为无状态连接。
    Http是无状态的短连接，TCP是有状态的长连接。Http建立在TCP的基础上，在每次请求完成后就把TCP连接关了，所以是短连接。
而我们直接通过Socket编程使用TCP协议的时候，因为我们自己可以通过代码区控制什么时候打开连接什么时候关闭连接，只要我们
不通过代码把连接关闭，这个连接就会在客户端和服务端的进程中一直存在，相关状态数据会一直保存着。
DNS：
    是域名系统（DomainNameSystem）的缩写，用来将域名转换为IP。域名便于人的记忆，而IP地址便于计算机网络设备的处理，
于是需要DNS来做前者到后者的转换。例如：http://zhidao.baidu.com 这是域名，http://172.16.17.150这是IP。

传输层：
传输层位于应用层和网络层之间，为运行在不同主机上的应用进程提供了逻辑通信功能。 P131的例子
